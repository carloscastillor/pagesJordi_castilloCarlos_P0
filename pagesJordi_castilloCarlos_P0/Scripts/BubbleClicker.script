local Click = hash("touch")
local score
local percentage
local scoreUpToTen
local bubbleBoundaries = {}

bubbleBoundaries.size = {x= 1362 * 0.34, y = 1362 * 0.34}
bubbleBoundaries.offset = {x = bubbleBoundaries.size.x*0.5, y =bubbleBoundaries.size.y*0.5}

go.property("minHeight", 0)
go.property("maxHeight", 0)
go.property("minWidth", 0)
go.property("maxWidth", 0)

bubbleBoundaries.CheckBoundaries = function (x,y)
		local pos = go.get_position()

		local isInsideX = (x <= pos.x + bubbleBoundaries.offset.x) and (x >= pos.x - bubbleBoundaries.offset.x)
		local isInsideY = (y <= pos.y + bubbleBoundaries.offset.y) and (y >= pos.y - bubbleBoundaries.offset.y)

		return isInsideX and isInsideY
	end

function init(self)
	sound.play("/BackgroundMusic#backgroudMusic")
	msg.post(".", "acquire_input_focus")
	self.score = 0
	self.percentage = 0
	self.scoreUpToTen = 0
	self.actions = {}
end

function update(self, dt)
	action = self.actions[Click]
	if action then 
		sound.play("/Bubble#clickSound")
		updateScore(self)
	end	
	
	self.actions[Click] = false
	
end

function on_message(self, message_id, message, sender)

	if message_id == hash("extra_click") then
		updateScore(self)
	end
end

function on_input(self, action_id, action)
	if action.pressed then
		if bubbleBoundaries.CheckBoundaries(action.x, action.y) then 
			self.actions[action_id] = true
		end
	end
end

function updateScore(self)
	self.score = self.score + 1
	msg.post("/GUI#Score", "update_score", {score = self.score})

	self.scoreUpToTen = self.scoreUpToTen + 1
	self.percentage = 100*self.scoreUpToTen
	msg.post("/GUI#Score", "update_pie", {percentage = self.percentage/10})

	if self.score ~= 0 and self.score % 10 == 0 then 
		random_pos = vmath.vector3(math.random(self.minWidth, self.maxWidth), math.random(self.minHeight, self.maxHeight), 0)
		factory.create("#power_up_factory", random_pos) 
		self.scoreUpToTen = 0

	end
end
